#!/usr/bin/env node
"use strict";var __awaiter=this&&this.__awaiter||function(e,i,s,l){return new(s=s||Promise)(function(t,o){function n(e){try{a(l.next(e))}catch(e){o(e)}}function r(e){try{a(l.throw(e))}catch(e){o(e)}}function a(e){var o;e.done?t(e.value):((o=e.value)instanceof s?o:new s(function(e){e(o)})).then(n,r)}a((l=l.apply(e,i||[])).next())})},__generator=this&&this.__generator||function(t,n){var r,a,i,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]},e={next:o(0),throw:o(1),return:o(2)};return"function"==typeof Symbol&&(e[Symbol.iterator]=function(){return this}),e;function o(o){return function(e){return function(o){if(r)throw new TypeError("Generator is already executing.");for(;s;)try{if(r=1,a&&(i=2&o[0]?a.return:o[0]?a.throw||((i=a.return)&&i.call(a),0):a.next)&&!(i=i.call(a,o[1])).done)return i;switch(a=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,a=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!(i=0<(i=s.trys).length&&i[i.length-1])&&(6===o[0]||2===o[0])){s=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){s.label=o[1];break}if(6===o[0]&&s.label<i[1]){s.label=i[1],i=o;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(o);break}i[2]&&s.ops.pop(),s.trys.pop();continue}o=n.call(t,s)}catch(e){o=[6,e],a=0}finally{r=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,e])}}},__importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.IsFileExists=exports.Login=exports.GenerateHashKey=exports.ToyCLILog=exports.downlaodCLI=exports.GetSubscription=exports.GetLoginData=exports.CMDLogin=exports.ToyLog=exports.httpClient=void 0;var node_machine_id_1=require("node-machine-id"),crypto_js_1=__importDefault(require("crypto-js")),commander_1=__importDefault(require("commander")),inquirer_1=__importDefault(require("inquirer")),figlet_1=__importDefault(require("figlet")),clear_1=__importDefault(require("clear")),chalk_1=__importDefault(require("chalk")),fs_1=__importDefault(require("fs")),child_process=require("child_process"),axios=require("axios").default,io=require("socket.io-client"),readline=require("readline"),open=require("open"),os=require("os"),filePath=os.homedir()+"/toyConfig.json",LOGINURL="https://play.toybox.dev",LOGIN="/login",osSystem=os.platform(),userNameQ=[{type:"input",name:"email",message:"email:"}],passwordQ=[{type:"password",name:"password",message:"password:"}];function ToyLog(){console.log(chalk_1.default.red(figlet_1.default.textSync("Toy-Server",{horizontalLayout:"full"}))),console.log("Usage: toyserver install cli:- To install the Toy CLI globally in user system")}function CMDLogin(){var o,t;inquirer_1.default.prompt(userNameQ).then(function(e){o=e.email,inquirer_1.default.prompt(passwordQ).then(function(e){t=e.password,GetLoginData(o,t)})})}function GetLoginData(r,a){return __awaiter(this,void 0,void 0,function(){var o,t,n;return __generator(this,function(e){switch(e.label){case 0:t={email:r,password:a},e.label=1;case 1:return e.trys.push([1,4,,5]),[4,exports.httpClient({url:"/toybox/signin",data:t,method:"POST"})];case 2:return[4,GetSubscription(o=e.sent())];case 3:return t=e.sent(),n={isLoggedIn:!0,loginUser:o.data,subscription:t.data},t="You are now Logged In \n Username: "+chalk_1.default.green(n.loginUser["custom:firstName"]+n.loginUser["custom:lastName"])+" \n Email: "+chalk_1.default.green(n.loginUser["cognito:username"]),console.log(t),fs_1.default.writeFileSync(filePath,JSON.stringify(n)),downlaodCLI(n),[3,5];case 4:return n=e.sent(),console.log(chalk_1.default.red(n.message)),[3,5];case 5:return[2]}})})}function GetSubscription(t){return __awaiter(this,void 0,void 0,function(){var o;return __generator(this,function(e){return o={id:t.data["cognito:username"]},[2,exports.httpClient({url:"/users/fetch",data:o,method:"POST",headers:{Authorization:"Bearer "+t.data.idToken}})]})})}function downlaodCLI(t,e,o){return __awaiter(this,void 0,void 0,function(){var o;return __generator(this,function(e){switch(e.label){case 0:return e.trys.push([0,2,,3]),[4,exports.httpClient({url:"/auth/install",method:"POST",headers:{Authorization:t.loginUser.idToken}})];case 1:return o=e.sent(),o="darwin"===osSystem?"sudo npm install -g "+o.data.install:"npm install -g "+o.data.install,console.log("Installing the package for you. Please wait window will automatically close on completion"),child_process.execSync(o,{stdio:[0,1,2]}),console.log(chalk_1.default.red(figlet_1.default.textSync("toybox-cli",{horizontalLayout:"full"}))),console.log("Usage: toy <commandName> where <commandName> is one of:"),console.log("\t toy, --help, init, install<component><componentName>, lint, test, canvas"),console.log("toy      To show usage and general commands available in the Toy CLI"),console.log("toy --help  Display the Help Options for the Toy CLI"),console.log("toy init    Initialize the Toy Server and Get the appropriate Seed Project based on user preference"),console.log("toy install <component> <componentName>  To create Component in Project Directory"),console.log("toy lint   Show the lint errors in the project and generate the Lint Report"),console.log("toy test   To generate the Unit Test Code for each component in the project"),console.log('toy canvas  Generate Test Coverage Report, Show Test Coverage Report on "localhost: 5000"'),[3,3];case 2:return e.sent(),console.log(chalk_1.default.red("Command Execution Failed. Please try agian....")),[3,3];case 3:return[2]}})})}function ToyCLILog(){console.log(chalk_1.default.red(figlet_1.default.textSync("toybox-cli",{horizontalLayout:"full"}))),console.log("Usage: toy <commandName> where <commandName> is one of:"),console.log("\t toy, --help, init, install<component><componentName>, lint, test, canvas"),console.log("toy      To show usage and general commands available in the Toy CLI"),console.log("toy --help  Display the Help Options for the Toy CLI"),console.log("toy init    Initialize the Toy Server and Get the appropriate Seed Project based on user preference"),console.log("toy install <component> <componentName>  To create Component in Project Directory"),console.log("toy lint   Show the lint errors in the project and generate the Lint Report"),console.log("toy test   To generate the Unit Test Code for each component in the project"),console.log('toy canvas  Generate Test Coverage Report, Show Test Coverage Report on "localhost: 5000"')}function GenerateHashKey(n,r){return __awaiter(this,void 0,void 0,function(){var o,t;return __generator(this,function(e){switch(e.label){case 0:return[4,node_machine_id_1.machineId()];case 1:return o=e.sent(),t=(new Date).getTime(),t={macId:o,socketId:n,timestamp:t},[4,crypto_js_1.default.AES.encrypt(JSON.stringify(t),"ToyPlay123").toString()];case 2:return t=e.sent(),r(t),[2]}})})}function Login(){console.log(chalk_1.default.green("ToyPlay: Press any key to open up the browser to login or q to exit:"));var t=io.connect("https://apiserver.toybox.dev",{reconnect:!1});console.log(t),t.on("connect",function(){GenerateHashKey(t.id,function(e){var t=LOGINURL+LOGIN+"?hashId="+e;readline.emitKeypressEvents(process.stdin),process.stdin.setRawMode(!0),process.stdin.on("keypress",function(e,o){"q"===o.name?process.exit():open(t)})})}),t.on("AuthMsgFromToyPlay",function(e){var o={isLoggedIn:!0,loginUser:e},e="You are now Logged In \n Username: "+chalk_1.default.green(o.loginUser.userLogin.name)+" \n Email: "+chalk_1.default.green(o.loginUser.userLogin.email);console.log(e),fs_1.default.writeFileSync(filePath,JSON.stringify(o)),downlaodCLI(o,t,process)})}function IsFileExists(e){return!!fs_1.default.existsSync(e)}exports.httpClient=axios.create({baseURL:"https://dev-api.toybox.dev"}),void 0===process.argv[2]&&(clear_1.default(),ToyLog()),exports.ToyLog=ToyLog,exports.CMDLogin=CMDLogin,exports.GetLoginData=GetLoginData,exports.GetSubscription=GetSubscription,exports.downlaodCLI=downlaodCLI,exports.ToyCLILog=ToyCLILog,exports.GenerateHashKey=GenerateHashKey,exports.Login=Login,exports.IsFileExists=IsFileExists,commander_1.default.command("install <cli>").description("Install the CLI globally").action(function(){CMDLogin()}),commander_1.default.parse(process.argv);